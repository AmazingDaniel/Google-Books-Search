{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/test/HomeWork/googleBooksSearch/client/src/pages/home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Search from \"../components/Search\";\nimport Listitem from \"../components/listItem\";\nimport api from \"../untils/api\";\n\nfunction Home(props) {\n  _s();\n\n  const [books, setBooks] = useState([]);\n  const [keyword, setKeyword] = useState(\"\");\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setKeyword(value);\n    console.log(value);\n  };\n\n  const handleSubmit = event => {\n    api.getGoogleSearchBooks(keyword).then(bookList => {\n      setBooks(bookList.data);\n    });\n  };\n\n  const handleSave = book => {\n    const bookData = {\n      title: book.volumeInfo.title,\n      authors: book.volumeInfo.authors,\n      description: book.volumeInfo.description,\n      image: book.volumeInfo.imageLinks.thumbnail,\n      link: book.volumeInfo.infoLink\n    };\n    api.saveBook(bookData).then(results => {\n      console.log(\"book Added\", results);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log(books), /*#__PURE__*/_jsxDEV(Search, {\n      keyword: keyword,\n      handleInputChange: handleInputChange,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"JW/x3+wRiQSlA6kwRPCSwkywLCs=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/test/HomeWork/googleBooksSearch/client/src/pages/home.js"],"names":["React","useState","useEffect","Search","Listitem","api","Home","props","books","setBooks","keyword","setKeyword","handleInputChange","event","name","value","target","console","log","handleSubmit","getGoogleSearchBooks","then","bookList","data","handleSave","book","bookData","title","volumeInfo","authors","description","image","imageLinks","thumbnail","link","infoLink","saveBook","results"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,GAAP,MAAgB,eAAhB;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;;AACA,QAAMW,iBAAiB,GAAEC,KAAK,IAAI;AAC9B,UAAK;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,KAAK,CAACG,MAA3B;AACAL,IAAAA,UAAU,CAACI,KAAD,CAAV;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACH,GALD;;AAMA,QAAMI,YAAY,GAAGN,KAAK,IAAI;AAC1BR,IAAAA,GAAG,CAACe,oBAAJ,CAAyBV,OAAzB,EAAkCW,IAAlC,CAAuCC,QAAQ,IAAG;AAC9Cb,MAAAA,QAAQ,CAACa,QAAQ,CAACC,IAAV,CAAR;AAGH,KAJD;AAKH,GAND;;AAOA,QAAMC,UAAU,GAAGC,IAAI,IAAI;AACvB,UAAMC,QAAQ,GAAG;AACfC,MAAAA,KAAK,EAAEF,IAAI,CAACG,UAAL,CAAgBD,KADR;AAEfE,MAAAA,OAAO,EAAEJ,IAAI,CAACG,UAAL,CAAgBC,OAFV;AAGfC,MAAAA,WAAW,EAAEL,IAAI,CAACG,UAAL,CAAgBE,WAHd;AAIfC,MAAAA,KAAK,EAAEN,IAAI,CAACG,UAAL,CAAgBI,UAAhB,CAA2BC,SAJnB;AAKfC,MAAAA,IAAI,EAAET,IAAI,CAACG,UAAL,CAAgBO;AALP,KAAjB;AAOA9B,IAAAA,GAAG,CAAC+B,QAAJ,CAAaV,QAAb,EAAuBL,IAAvB,CAA4BgB,OAAO,IAAI;AACnCpB,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BmB,OAA1B;AACH,KAFD;AAGH,GAXD;;AAYC,sBACI;AAAA,eACCpB,OAAO,CAACC,GAAR,CAAYV,KAAZ,CADD,eAEC,QAAC,MAAD;AAAS,MAAA,OAAO,EAAEE,OAAlB;AAA2B,MAAA,iBAAiB,EAAEE,iBAA9C;AAAiE,MAAA,YAAY,EAAEO;AAA/E;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA,kBADJ;AAOH;;GAnCQb,I;;KAAAA,I;AAoCR,eAAeA,IAAf","sourcesContent":["import React ,{ useState, useEffect } from \"react\"\nimport Search from \"../components/Search\"\nimport Listitem from \"../components/listItem\"\nimport api from \"../untils/api\"\nfunction Home(props){\n   const [books, setBooks] = useState([])\n   const [keyword, setKeyword] = useState(\"\")\n   const handleInputChange= event => {\n       const{name, value} = event.target\n       setKeyword(value)\n\n       console.log(value)\n   }\n   const handleSubmit = event => {\n       api.getGoogleSearchBooks(keyword).then(bookList=> {\n           setBooks(bookList.data)\n\n\n       })\n   }\n   const handleSave = book => {\n       const bookData = {\n         title: book.volumeInfo.title,\n         authors: book.volumeInfo.authors,\n         description: book.volumeInfo.description,\n         image: book.volumeInfo.imageLinks.thumbnail,\n         link: book.volumeInfo.infoLink\n       }\n       api.saveBook(bookData).then(results => {\n           console.log(\"book Added\", results)\n       })\n   }\n    return(\n        <>\n        {console.log(books)}\n         <Search  keyword={keyword} handleInputChange={handleInputChange} handleSubmit={handleSubmit}/>\n     \n        </>\n    )\n}\n export default Home"]},"metadata":{},"sourceType":"module"}