{"version":3,"sources":["logo.svg","components/Search/index.js","components/listItem/index.js","untils/api.js","pages/home.js","pages/save.js","App.js","registerServiceWorker.js","index.js"],"names":["Search","keyword","handleInputChange","handleSubmit","className","value","onChange","onClick","Listitem","books","handleSave","length","map","book","src","volumeInfo","imageLinks","thumbnail","title","authors","href","infoLink","description","axios","get","savedBooks","post","Home","props","useState","setBooks","setKeyword","console","log","event","target","name","api","then","bookList","data","bookData","image","link","results","Save","useEffect","booklist","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b9adf3bb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.7dae9582.svg\";","import React from \"react\"\nfunction Search({ keyword, handleInputChange, handleSubmit }){\n    return(\n        <div className=\"container text-center\">\n            <div className=\"row\">\n               <div className=\"col-sm-4\">\n               <input   className=\"form-control\" value={keyword} onChange={handleInputChange}/>\n       \n               </div>\n               <div className=\"col-sm-1 text-right\"><button onClick={handleSubmit}>Search</button></div>\n            </div>\n        </div>\n    )\n}\n\nexport default Search","import React from 'react'\n\nfunction Listitem( { books, handleSave } ) {\n    return (\n        <>\n        {books.length > 0 ? books.map(book => {\n            return (\n                <div className=\"card\"> \n                <div className=\"card-body\">\n                     <div className=\"row\">\n                         <div className=\"col-md-1\">\n                            <img src={book.volumeInfo ? book.volumeInfo.imageLinks.thumbnail:\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6c/No_image_3x4.svg/1200px-No_image_3x4.svg.png\" }/>\n                            <p></p>\n                         </div>\n                         <div className=\"col-md-11 pl-5\">\n                             <div className=\"row\">\n                                 <div className=\"col-sm-4\"> \n                                 <h3>{book.volumeInfo.title}</h3>\n                                <h4>Written by: {book.volumeInfo.authors} </h4>\n                                 </div>\n                                 <div className=\"col-sm-8 text-right\">\n                                     <a href={book.volumeInfo.infoLink} className=\"btn btn-default\">\n                                          view\n                                     </a>\n                                     <button className=\"ml-2\" onClick={() => \n                                    handleSave(book)}>\n                                          save\n                                     </button>\n                                 </div>\n                             </div>\n                           \n                             <p>{book.volumeInfo.description}</p>\n                         </div>\n                     </div>\n                </div>\n          </div>\n  \n            )\n        })   : \"No Books\"}\n       \n        </>\n    )\n}\n\nexport default Listitem\n","import axios from \"axios\"\n\nexport default {\n    // Get book from google search \n    getGoogleSearchBooks: function(title) {\n        return axios.get(\"/api/googlebooks/\" + title)\n    },\n\n    // Gets all books\n    getBooks: function () {\n        return axios.get(\"/api/books\");\n    },\n\n    // Gets the book with the given id\n    getBook: function (id) {\n        return axios.get(\"/api/books/\" + id);\n    },\n\n    // Saves a book to the database\n    saveBook: function (savedBooks) {\n        return axios.post(\"/api/books\", savedBooks);\n    },\n\n    // Deletes the book with the given id\n    deleteBook: function (id) {\n        return axios.delete(\"/api/books/\" + id);\n    }\n\n}","import React ,{ useState, useEffect } from \"react\"\nimport Search from \"../components/Search\"\nimport Listitem from \"../components/listItem\"\nimport api from \"../untils/api\"\nfunction Home(props){\n   const [books, setBooks] = useState([])\n   const [keyword, setKeyword] = useState(\"\")\n   const handleInputChange= event => {\n       const{name, value} = event.target\n       setKeyword(value)\n\n       console.log(value)\n   }\n   const handleSubmit = event => {\n       api.getGoogleSearchBooks(keyword).then(bookList=> {\n           setBooks(bookList.data)\n\n\n       })\n   }\n   const handleSave = book => {\n       const bookData = {\n         title: book.volumeInfo.title,\n         authors: book.volumeInfo.authors,\n         description: book.volumeInfo.description,\n         image: book.volumeInfo.imageLinks.thumbnail,\n         link: book.volumeInfo.infoLink\n       }\n       api.saveBook(bookData).then(results => {\n           console.log(\"book Added\", results)\n       })\n   }\n    return(\n        <>\n        {console.log(books)}\n         <Search  keyword={keyword} handleInputChange={handleInputChange} handleSubmit={handleSubmit}/>\n         <Listitem books={books} handleSave={handleSave}/>\n        </>\n    )\n}\n export default Home;","import React, {useState,useEffect }from \"react\"\nimport Listitem from \"../components/listItem\"\n\nimport api from \"../untils/api\"\nfunction Save(){\n    const [books, setBooks] = useState([])\n    useEffect(() => {\n        api.getBooks().then(booklist => {\n            console.log(booklist.data)\n            const data= booklist.data.map(book =>  {\n              return (\n\n                {\n                    volumeInfo:{\n                        title: book.title,\n                        authors: book.authors,\n                        imageLinks: {\n                            thumbnail:book.image\n                        },\n                        infoLink: book.link,\n                        description: book.description\n                    }\n                }\n              )\n              \n              \n               \n            })\n            setBooks(data)\n        })\n    }, [])\n    const handleDelete = event => {\n\n    }\n\n    return(\n       <>   \n       {console.log(books)}\n        <Listitem books={books} handleSave={handleDelete}/> \n       </>\n    )\n}\nexport default Save","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport {BrowserRouter as Router, Route} from \"react-router-dom\"\n\nimport Home from \"./pages/home\"\nimport Save from \"./pages/save\"\nfunction App() {\n  return (\n     <Router>\n       <Route exact path=\"/\" component={ Home }/>\n       <Route exact path=\"/save\" component={ Save }/>\n     </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}